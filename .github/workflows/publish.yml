name: Release Zip on Version Change

permissions:
  contents: write

on:
  push:
    paths:
      - 'libraries/**/version'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get changed version files
        id: changed_files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **/version

      - name: Process each changed version file
        if: steps.changed_files.outputs.all_changed_files_count > 0
        run: |
          for file in libraries/*/version ; do
            SUBFOLDER=$(dirname "$file" | sed 's|libraries/||')
            VERSION=$(cat "$file" | tr -d '[:space:]')
            ZIP_NAME="${SUBFOLDER}.zip"
            echo "Processing $SUBFOLDER with version $VERSION"
            cd "libraries/$SUBFOLDER"
            zip -r "../../$ZIP_NAME" ./* -x "version"
            cp version "../../$SUBFOLDER.version"
            if [ -f "$SUBFOLDER.png" ] ; then
              cp "$SUBFOLDER.png" "../../$SUBFOLDER.png"
            fi
            cd -
            RELEASE_FILES="$RELEASE_FILES $ZIP_NAME $SUBFOLDER.version"
          done
          echo "RELEASE_FILES="$RELEASE_FILES"" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.RELEASE_FILES != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TITLE="Release: $(date +%Y/%m/%d-%H:%M:%S)"
          TAG_NAME="release-$(date +%Y%m%d-%H%M%S)"
          ls $RELEASE_FILES
          gh release create "$TAG_NAME" --latest $RELEASE_FILES --title "$TITLE" --notes "Auto-generated release from version updates."
